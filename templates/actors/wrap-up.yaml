
# Inline python actor to take care of any unfinished business and finish the workflow.
- id: <%= actor.name %>
  type: PythonActor
  properties:
    # Inline python code to run.
    code: |
        # The function to run when an on_data message is received. Accepts a dictionary
        # of options.
        def on_data(options):
            actor = 'WrapUp'
            print '### Started %s ###' % actor
            for key, value in options.iteritems():
                if key == 'artifacts':
                    print 'artifacts:'
                    keylist = []
                    for akey, avalue in options[key].iteritems():
                        keylist.append(akey)
                    sortedkeylist = sorted(keylist)
                    for skey in sortedkeylist:
                        print '  %s: %s' % (skey, options[key][skey])
                else:
                    print '%s: %s' % (key, value)
            print '### Finished Wrapup ###'
    # A list of parameters to get from the options dictionary passed from an
    # upstream actor.
    inputs:
      <% _.each(actor.inputs, function(input) { %>
      <%= input.from %>: <%= input.to %>
      <% }); %>
    parameters:
      # Show the name of the upstream actor.
      messagefrom: <%= actor.listensTo %>
    # The "upstream" actor from which to receive a message.
    listensTo:
      - !ref <%= actor.listensTo %>
